// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: product_variant.sql

package database

import (
	"context"
)

const createProductVariant = `-- name: CreateProductVariant :one
INSERT INTO products_variants (product_id, variant_id)
VALUES ($1, $2)
RETURNING product_id, variant_id
`

type CreateProductVariantParams struct {
	ProductID int64
	VariantID int64
}

func (q *Queries) CreateProductVariant(ctx context.Context, arg CreateProductVariantParams) (ProductsVariant, error) {
	row := q.db.QueryRow(ctx, createProductVariant, arg.ProductID, arg.VariantID)
	var i ProductsVariant
	err := row.Scan(&i.ProductID, &i.VariantID)
	return i, err
}

const deleteProductVariant = `-- name: DeleteProductVariant :exec
DELETE FROM products_variants
WHERE product_id = $1 AND variant_id = $2
`

type DeleteProductVariantParams struct {
	ProductID int64
	VariantID int64
}

func (q *Queries) DeleteProductVariant(ctx context.Context, arg DeleteProductVariantParams) error {
	_, err := q.db.Exec(ctx, deleteProductVariant, arg.ProductID, arg.VariantID)
	return err
}

const removeAllVariantToProduct = `-- name: RemoveAllVariantToProduct :exec
DELETE FROM products_variants
WHERE product_id = $1
`

func (q *Queries) RemoveAllVariantToProduct(ctx context.Context, productID int64) error {
	_, err := q.db.Exec(ctx, removeAllVariantToProduct, productID)
	return err
}
